---
- include_tasks: setup-RedHat.yml
  when: ( ansible_os_family == 'RedHat' or ansible_pkg_mgr == "dnf" or ansible_pkg_mgr == "yum" )

- include_tasks: setup-Debian.yml
  when: (ansible_distribution == "Debian")

#- include_tasks: setup-Ubuntu.yml
#  when: (ansible_distribution == "Ubuntu")


- name: Download gitea 
  ansible.builtin.get_url:
    url: "https://dl.gitea.io/gitea/{{gitea_version}}/gitea-{{gitea_version}}-linux-amd64"
    dest: /usr/local/bin/gitea
    mode: '0755'

- name: add git group
  ansible.builtin.group:
    name: git
    state: present

- name: add git user
  ansible.builtin.user:
    name: git
    group: git

- name: gitea data dir
  ansible.builtin.file:
    path: /var/lib/gitea
    owner: git
    group: git
    state: directory
    recurse: yes
    mode: '0750'

- name: gitea custom dir
  ansible.builtin.file:
    path: /var/lib/gitea/custom
    owner: git
    group: git
    state: directory
    recurse: yes
    mode: '0750'

- name: gitea data dir
  ansible.builtin.file:
    path: /var/lib/gitea/data
    owner: git
    group: git
    state: directory
    recurse: yes
    mode: '0750'

- name: gitea log dir
  ansible.builtin.file:
    path: /var/lib/gitea/log
    owner: git
    group: git
    state: directory
    recurse: yes
    mode: '0750'

- name: gitea etc dir
  ansible.builtin.file:
    path: /etc/gitea
    owner: git
    group: git
    state: directory
    recurse: yes
    mode: '0750'

- name: gitea service
  ansible.builtin.template:
    src: templates/gitea.service.j2
    dest: /etc/systemd/system/gitea.service
    owner: root
    group: root
    mode: '0644'

- name: start, enable, daemon reload gitea servies
  ansible.builtin.systemd:
    name: gitea
    daemon_reload: yes
    enabled: yes
    state: started

- name: secure permissions gitea /etc
  ansible.builtin.file:
    path: /etc/gitea
    #owner: root
    #group: root
    mode: '750'

- name: secure permissions gitea dir
  ansible.builtin.file:
    path: /etc/gitea/app.ini
    #owner: root
    #group: root
    mode: '640'

- name: deploy postgres backup script
  ansible.builtin.template:
    src: templates/postgres_backup.sh.j2
    dest: /usr/local/postgres_backup.sh
    owner: root
    group: root
    mode: '0755'

- name: create postgres backup dir
  ansible.builtin.file:
    path: /mnt/backup
    owner: root
    group: root
    mode: '644'

- name: add add postgres backup cronjob
  ansible.builtin.cron:
    name: "postgres_backup"
    minute: "0"
    hour: "20"
    #day: "1"
    user: root
    job: "/usr/local/postgres_backup.sh > /dev/null"
    state: present